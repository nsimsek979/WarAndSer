# Generated by Django 5.2.4 on 2025-07-24 10:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('item_master', '0009_serviceperiodtype_serviceperiodvalue_and_more'),
        ('warranty_and_services', '0009_alter_serviceformentry_service_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='serviceformentry',
            name='changed_spare_parts',
        ),
        migrations.RemoveField(
            model_name='serviceformentry',
            name='checked_controls',
        ),
        migrations.RemoveField(
            model_name='serviceformentry',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='serviceformentry',
            name='installation',
        ),
        migrations.RemoveField(
            model_name='serviceformentry',
            name='service_followup',
        ),
        migrations.RemoveField(
            model_name='serviceformentryimage',
            name='service_form_entry',
        ),
        migrations.AlterField(
            model_name='servicefollowup',
            name='service_type',
            field=models.CharField(choices=[('time_term', 'Time-Term Service (Month Based)'), ('working_hours', 'Working Hours Service')], max_length=20, verbose_name='Service Type'),
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('periodic', 'Periodic Maintenance'), ('breakdown', 'Breakdown Maintenance')], help_text='Select the type of maintenance performed', max_length=20, verbose_name='Maintenance Type')),
                ('breakdown_reason', models.TextField(blank=True, help_text='Required for breakdown maintenance', verbose_name='Breakdown Reason')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('maintenance_date', models.DateTimeField(auto_now_add=True, verbose_name='Maintenance Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_followup', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_record', to='warranty_and_services.servicefollowup', verbose_name='Service Follow-Up')),
                ('technician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Technician')),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenancePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='maintenance_photos/', verbose_name='Photo')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('maintenance_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='warranty_and_services.maintenancerecord', verbose_name='Maintenance Record')),
            ],
            options={
                'verbose_name': 'Maintenance Photo',
                'verbose_name_plural': 'Maintenance Photos',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='maintenance_documents/', verbose_name='Document')),
                ('name', models.CharField(max_length=255, verbose_name='Document Name')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('maintenance_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='warranty_and_services.maintenancerecord', verbose_name='Maintenance Record')),
            ],
            options={
                'verbose_name': 'Maintenance Document',
                'verbose_name_plural': 'Maintenance Documents',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceServiceForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('maintenance_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_forms', to='warranty_and_services.maintenancerecord', verbose_name='Maintenance Record')),
                ('service_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='item_master.serviceform', verbose_name='Service Form')),
            ],
            options={
                'verbose_name': 'Maintenance Service Form',
                'verbose_name_plural': 'Maintenance Service Forms',
                'unique_together': {('maintenance_record', 'service_form')},
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSparePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_used', models.BooleanField(default=False, verbose_name='Used')),
                ('quantity_used', models.PositiveIntegerField(default=1, verbose_name='Quantity Used')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('maintenance_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spare_parts', to='warranty_and_services.maintenancerecord', verbose_name='Maintenance Record')),
                ('spare_part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='item_master.itemmaster', verbose_name='Spare Part')),
            ],
            options={
                'verbose_name': 'Maintenance Spare Part',
                'verbose_name_plural': 'Maintenance Spare Parts',
                'unique_together': {('maintenance_record', 'spare_part')},
            },
        ),
        migrations.DeleteModel(
            name='ServiceFormEntryDocument',
        ),
        migrations.DeleteModel(
            name='ServiceFormEntry',
        ),
        migrations.DeleteModel(
            name='ServiceFormEntryImage',
        ),
    ]
