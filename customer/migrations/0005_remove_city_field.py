# Generated by Django 5.2.1 on 2025-07-18 17:18

from django.db import migrations


def backup_city_data(apps, schema_editor):
    """
    Backup city data before removing the field.
    This function logs which companies have city data that will be lost.
    """
    Company = apps.get_model('customer', 'Company')
    
    companies_with_city = Company.objects.filter(city__isnull=False)
    if companies_with_city.exists():
        print(f"\n⚠️  WARNING: {companies_with_city.count()} companies have city data that will be removed:")
        for company in companies_with_city:
            print(f"  - {company.name}: {company.city.name if company.city else 'None'}")
        print("This data will be permanently lost after this migration.\n")


def reverse_backup_city_data(apps, schema_editor):
    """
    Reverse operation - nothing to do since we're just logging
    """
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("customer", "0004_alter_company_options_alter_company_related_manager"),
    ]

    operations = [
        # First, run data migration to backup/log existing city data
        migrations.RunPython(backup_city_data, reverse_backup_city_data),
        
        # Then remove the city field
        migrations.RemoveField(
            model_name='company',
            name='city',
        ),
    ]
